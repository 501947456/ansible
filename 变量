在play中定义变量，可以借助vars关键字
---
- hosts: test70
  vars:
    testvar1: testfile
  remote_user: root
  tasks:
  - name: task1
    file:
      path: /testdir/{{ testvar1 }}  #变量没有在开头，可以不用双引号
      state: touch

以属性的方式定义变量

---
- hosts: test70
  remote_user: root
  vars:
    nginx:
      conf80: /etc/nginx/conf.d/80.conf
      conf8080: /etc/nginx/conf.d/8080.conf
  tasks:
  - name: task1
    file:
      path: "{{nginx.conf80}}"  #变量引用在开头的位置，所以必须使用双引号
      state: touch
  - name: task2
    file:
      path: "{{nginx.conf8080}}"
      state: touch



变量文件分离：可以隐藏某些值，与剧本主体分离

变量文件：nginx_vars.yml
cat nginx_vars.yml
nginx:
  conf80: /etc/nginx/conf.d/80.conf
  conf8080: /etc/nginx/conf.d/8080.conf


在playbook中引入文件中的变量，使用vars_file关键字，被引入的文件需要以'-' 开头

---
- hosts: test70
  remote_user: root
  vars_files:
  - /testdir/ansible/nginx_vars.yml
  tasks:
  - name: task1
    file:
      path={{nginx.conf80}}
      state=touch
  - name: task2
    file:
      path={{nginx['conf8080']}}
      state=touch

引入多个文件
  vars_files:
  - /testdir/ansible/nginx_vars.yml
  - /testdir/ansible/other_vars.yml
vars 和vars_files 同时使用
  vars:
  - conf90: /etc/nginx/conf.d/90.conf
  vars_files:
  - /testdir/ansible/nginx_vars.yml
